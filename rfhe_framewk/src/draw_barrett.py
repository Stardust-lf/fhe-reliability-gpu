import pandas as pd
import matplotlib.pyplot as plt
from io import StringIO

plt.rcParams["font.family"] = "Gill Sans"
plt.rcParams["font.weight"] = "bold"
plt.rcParams["font.size"] = 15

# 修正：把你给的四段数据按换行正确整理为 CSV
data1 = """FOLD_WIDTH,USE_T,USE_SN,USE_FINAL,DetectionRate,TP,FP,TN,FN
2,1,0,0,0.3246,3246,0,0,6754
2,0,1,0,0.6683,6683,0,0,3317
2,0,0,1,1.0000,10000,0,0,0
3,1,0,0,0.4259,4259,0,0,5741
3,0,1,0,0.8637,8637,0,0,1363
3,0,0,1,1.0000,10000,0,0,0
4,1,0,0,0.4670,4670,0,0,5330
4,0,1,0,0.9327,9327,0,0,673
4,0,0,1,1.0000,10000,0,0,0
5,1,0,0,0.4815,4815,0,0,5185
5,0,1,0,0.9692,9691,1,0,308
5,0,0,1,1.0000,10000,0,0,0
6,1,0,0,0.4962,4962,0,0,5038
6,0,1,0,0.9838,9838,0,0,162
6,0,0,1,1.0000,9999,1,0,0
7,1,0,0,0.4981,4981,0,0,5019
7,0,1,0,0.9921,9921,0,0,79
7,0,0,1,1.0000,10000,0,0,0
8,1,0,0,0.5018,5018,0,0,4982
8,0,1,0,0.9957,9957,0,0,43
8,0,0,1,1.0000,10000,0,0,0
9,1,0,0,0.4971,4971,0,0,5029
9,0,1,0,0.9984,9984,0,0,16
9,0,0,1,1.0000,10000,0,0,0
10,1,0,0,0.4950,4950,0,0,5050
10,0,1,0,0.9990,9990,0,0,10
10,0,0,1,1.0000,10000,0,0,0
11,1,0,0,0.5021,5021,0,0,4979
11,0,1,0,0.9992,9992,0,0,8
11,0,0,1,1.0000,10000,0,0,0
12,1,0,0,0.5009,5009,0,0,4991
12,0,1,0,0.9996,9996,0,0,4
12,0,0,1,1.0000,10000,0,0,0
13,1,0,0,0.4964,4964,0,0,5036
13,0,1,0,0.9998,9998,0,0,2
13,0,0,1,1.0000,10000,0,0,0
14,1,0,0,0.4905,4905,0,0,5095
14,0,1,0,0.9999,9999,0,0,1
14,0,0,1,1.0000,10000,0,0,0
15,1,0,0,0.5099,5099,0,0,4901
15,0,1,0,0.9998,9998,0,0,2
15,0,0,1,1.0000,10000,0,0,0
16,1,0,0,0.5012,5012,0,0,4988
16,0,1,0,1.0000,10000,0,0,0
16,0,0,1,1.0000,10000,0,0,0
17,1,0,0,0.5017,5017,0,0,4983
17,0,1,0,0.9998,9998,0,0,2
17,0,0,1,1.0000,10000,0,0,0
18,1,0,0,0.5034,5034,0,0,4966
18,0,1,0,1.0000,10000,0,0,0
18,0,0,1,1.0000,10000,0,0,0
19,1,0,0,0.4943,4943,0,0,5057
19,0,1,0,1.0000,10000,0,0,0
19,0,0,1,1.0000,10000,0,0,0
20,1,0,0,0.5007,5007,0,0,4993
20,0,1,0,1.0000,10000,0,0,0
20,0,0,1,1.0000,10000,0,0,0
21,1,0,0,0.5028,5028,0,0,4972
21,0,1,0,1.0000,10000,0,0,0
21,0,0,1,1.0000,10000,0,0,0
22,1,0,0,0.4970,4970,0,0,5030
22,0,1,0,0.9999,9999,0,0,1
22,0,0,1,1.0000,10000,0,0,0
23,1,0,0,0.5007,5007,0,0,4993
23,0,1,0,1.0000,10000,0,0,0
23,0,0,1,1.0000,10000,0,0,0
24,1,0,0,0.5038,5038,0,0,4962
24,0,1,0,1.0000,10000,0,0,0
24,0,0,1,1.0000,10000,0,0,0
25,1,0,0,0.4978,4978,0,0,5022
25,0,1,0,1.0000,10000,0,0,0
25,0,0,1,1.0000,10000,0,0,0
26,1,0,0,0.4957,4957,0,0,5043
26,0,1,0,1.0000,10000,0,0,0
26,0,0,1,1.0000,10000,0,0,0
27,1,0,0,0.4947,4947,0,0,5053
27,0,1,0,1.0000,10000,0,0,0
27,0,0,1,1.0000,10000,0,0,0
28,1,0,0,0.5015,5015,0,0,4985
28,0,1,0,1.0000,10000,0,0,0
28,0,0,1,1.0000,10000,0,0,0
29,1,0,0,0.5018,5018,0,0,4982
29,0,1,0,1.0000,10000,0,0,0
29,0,0,1,1.0000,10000,0,0,0
30,1,0,0,0.4990,4990,0,0,5010
30,0,1,0,1.0000,10000,0,0,0
30,0,0,1,1.0000,10000,0,0,0
31,1,0,0,0.5090,5090,0,0,4910
31,0,1,0,1.0000,10000,0,0,0
31,0,0,1,1.0000,10000,0,0,0
32,1,0,0,0.4938,4938,0,0,5062
32,0,1,0,1.0000,10000,0,0,0
32,0,0,1,1.0000,10000,0,0,0
"""

data2 = """FOLD_WIDTH,USE_T,USE_SN,USE_FINAL,DetectionRate,TP,FP,TN,FN
2,1,0,0,0.3382,3382,0,0,6618
2,0,1,0,0.6635,6635,0,0,3365
2,0,0,1,1.0000,10000,0,0,0
3,1,0,0,0.4303,4303,0,0,5697
3,0,1,0,0.8596,8596,0,0,1404
3,0,0,1,1.0000,10000,0,0,0
4,1,0,0,0.4686,4686,0,0,5314
4,0,1,0,0.9342,9342,0,0,658
4,0,0,1,1.0000,10000,0,0,0
5,1,0,0,0.4843,4843,0,0,5157
5,0,1,0,0.9664,9664,0,0,336
5,0,0,1,1.0000,10000,0,0,0
6,1,0,0,0.4954,4954,0,0,5046
6,0,1,0,0.9835,9835,0,0,165
6,0,0,1,1.0000,10000,0,0,0
7,1,0,0,0.4958,4958,0,0,5042
7,0,1,0,0.9916,9916,0,0,84
7,0,0,1,1.0000,10000,0,0,0
8,1,0,0,0.4959,4959,0,0,5041
8,0,1,0,0.9968,9968,0,0,32
8,0,0,1,1.0000,10000,0,0,0
9,1,0,0,0.4910,4910,0,0,5090
9,0,1,0,0.9978,9978,0,0,22
9,0,0,1,1.0000,10000,0,0,0
10,1,0,0,0.5022,5022,0,0,4978
10,0,1,0,0.9990,9990,0,0,10
10,0,0,1,1.0000,10000,0,0,0
11,1,0,0,0.4913,4913,0,0,5087
11,0,1,0,0.9996,9996,0,0,4
11,0,0,1,1.0000,10000,0,0,0
12,1,0,0,0.4964,4964,0,0,5036
12,0,1,0,0.9995,9995,0,0,5
12,0,0,1,1.0000,10000,0,0,0
13,1,0,0,0.4902,4902,0,0,5098
13,0,1,0,1.0000,10000,0,0,0
13,0,0,1,1.0000,10000,0,0,0
14,1,0,0,0.4995,4995,0,0,5005
14,0,1,0,1.0000,10000,0,0,0
14,0,0,1,1.0000,10000,0,0,0
15,1,0,0,0.5007,5007,0,0,4993
15,0,1,0,1.0000,10000,0,0,0
15,0,0,1,1.0000,10000,0,0,0
16,1,0,0,0.4944,4944,0,0,5056
16,0,1,0,1.0000,10000,0,0,0
16,0,0,1,1.0000,10000,0,0,0
17,1,0,0,0.5060,5060,0,0,4940
17,0,1,0,1.0000,10000,0,0,0
17,0,0,1,1.0000,10000,0,0,0
18,1,0,0,0.4921,4921,0,0,5079
18,0,1,0,1.0000,10000,0,0,0
18,0,0,1,1.0000,10000,0,0,0
19,1,0,0,0.4978,4978,0,0,5022
19,0,1,0,1.0000,10000,0,0,0
19,0,0,1,1.0000,10000,0,0,0
20,1,0,0,0.4944,4944,0,0,5056
20,0,1,0,1.0000,10000,0,0,0
20,0,0,1,1.0000,10000,0,0,0
21,1,0,0,0.5031,5031,0,0,4969
21,0,1,0,1.0000,10000,0,0,0
21,0,0,1,1.0000,10000,0,0,0
22,1,0,0,0.4993,4993,0,0,5007
22,0,1,0,1.0000,10000,0,0,0
22,0,0,1,1.0000,10000,0,0,0
23,1,0,0,0.4985,4985,0,0,5015
23,0,1,0,1.0000,10000,0,0,0
23,0,0,1,1.0000,10000,0,0,0
24,1,0,0,0.5001,5001,0,0,4999
24,0,1,0,1.0000,10000,0,0,0
24,0,0,1,1.0000,10000,0,0,0
25,1,0,0,0.4991,4991,0,0,5009
25,0,1,0,1.0000,10000,0,0,0
25,0,0,1,1.0000,10000,0,0,0
26,1,0,0,0.4961,4961,0,0,5039
26,0,1,0,1.0000,10000,0,0,0
26,0,0,1,1.0000,10000,0,0,0
27,1,0,0,0.5023,5023,0,0,4977
27,0,1,0,1.0000,10000,0,0,0
27,0,0,1,1.0000,10000,0,0,0
28,1,0,0,0.4987,4987,0,0,5013
28,0,1,0,1.0000,10000,0,0,0
28,0,0,1,1.0000,10000,0,0,0
29,1,0,0,0.4974,4974,0,0,5026
29,0,1,0,1.0000,10000,0,0,0
29,0,0,1,1.0000,10000,0,0,0
30,1,0,0,0.5025,5025,0,0,4975
30,0,1,0,1.0000,10000,0,0,0
30,0,0,1,1.0000,10000,0,0,0
31,1,0,0,0.4968,4968,0,0,5032
31,0,1,0,1.0000,10000,0,0,0
31,0,0,1,1.0000,10000,0,0,0
32,1,0,0,0.4944,4944,0,0,5056
32,0,1,0,1.0000,10000,0,0,0
32,0,0,1,1.0000,10000,0,0,0
"""

data3 = """FOLD_WIDTH,USE_T,USE_SN,USE_FINAL,DetectionRate,TP,FP,TN,FN
2,1,0,0,0.1734,1319,1229,1165,6287
2,0,1,0,0.6388,4857,57,2340,2746
2,0,0,1,0.8204,6226,41,2370,1363
3,1,0,0,0.2925,2217,2000,420,5363
3,0,1,0,0.8826,6677,65,2370,888
3,0,0,1,0.8197,6189,34,2416,1361
4,1,0,0,0.2959,2242,2139,283,5336
4,0,1,0,0.9145,6982,66,2299,653
4,0,0,1,0.8234,6270,33,2352,1345
5,1,0,0,0.3055,2309,2196,247,5248
5,0,1,0,0.9330,7089,60,2342,509
5,0,0,1,0.8228,6326,39,2273,1362
6,1,0,0,0.3148,2364,2310,180,5146
6,0,1,0,0.9434,7231,51,2284,434
6,0,0,1,0.8121,6209,42,2312,1437
7,1,0,0,0.3176,2412,2243,162,5183
7,0,1,0,0.9480,7254,66,2282,398
7,0,0,1,0.8204,6291,35,2297,1377
8,1,0,0,0.3318,2537,2201,153,5109
8,0,1,0,0.9651,7360,74,2300,266
8,0,0,1,0.8265,6331,32,2308,1329
9,1,0,0,0.3254,2482,2275,97,5146
9,0,1,0,0.9652,7379,78,2277,266
9,0,0,1,0.8310,6362,28,2316,1294
10,1,0,0,0.3333,2540,2272,107,5081
10,0,1,0,0.9693,7316,59,2393,232
10,0,0,1,0.8189,6189,28,2414,1369
11,1,0,0,0.3299,2498,2339,88,5075
11,0,1,0,0.9719,7371,60,2356,213
11,0,0,1,0.8297,6316,34,2354,1296
12,1,0,0,0.3352,2532,2350,97,5021
12,0,1,0,0.9720,7363,60,2365,212
12,0,0,1,0.8239,6265,28,2368,1339
13,1,0,0,0.3246,2476,2295,76,5153
13,0,1,0,0.9782,7495,60,2278,167
13,0,0,1,0.8253,6234,41,2405,1320
14,1,0,0,0.3373,2589,2272,52,5087
14,0,1,0,0.9798,7439,59,2349,153
14,0,0,1,0.8271,6271,31,2387,1311
15,1,0,0,0.3327,2524,2351,63,5062
15,0,1,0,0.9804,7492,56,2302,150
15,0,0,1,0.8240,6281,28,2349,1342
16,1,0,0,0.3254,2501,2255,59,5185
16,0,1,0,0.9849,7426,66,2394,114
16,0,0,1,0.8240,6214,43,2416,1327
17,1,0,0,0.3247,2484,2320,30,5166
17,0,1,0,0.9813,7456,46,2356,142
17,0,0,1,0.8236,6305,29,2316,1350
18,1,0,0,0.3307,2516,2342,51,5091
18,0,1,0,0.9867,7512,63,2324,101
18,0,0,1,0.8187,6217,24,2382,1377
19,1,0,0,0.3374,2569,2349,36,5046
19,0,1,0,0.9865,7442,70,2386,102
19,0,0,1,0.8244,6329,37,2286,1348
20,1,0,0,0.3424,2603,2358,40,4999
20,0,1,0,0.9873,7440,71,2393,96
20,0,0,1,0.8170,6194,43,2376,1387
21,1,0,0,0.3263,2460,2420,41,5079
21,0,1,0,0.9872,7476,61,2366,97
21,0,0,1,0.8241,6274,17,2370,1339
22,1,0,0,0.3386,2560,2402,38,5000
22,0,1,0,0.9892,7485,72,2361,82
22,0,0,1,0.8187,6221,25,2376,1378
23,1,0,0,0.3465,2603,2447,41,4909
23,0,1,0,0.9907,7529,61,2339,71
23,0,0,1,0.8248,6224,26,2428,1322
24,1,0,0,0.3371,2575,2329,32,5064
24,0,1,0,0.9916,7538,69,2329,64
24,0,0,1,0.8233,6257,42,2358,1343
25,1,0,0,0.3362,2553,2381,26,5040
25,0,1,0,0.9913,7544,71,2319,66
25,0,0,1,0.8225,6297,36,2308,1359
26,1,0,0,0.3397,2581,2367,35,5017
26,0,1,0,0.9890,7524,69,2323,84
26,0,0,1,0.8114,6158,41,2370,1431
27,1,0,0,0.3335,2521,2408,32,5039
27,0,1,0,0.9902,7487,49,2390,74
27,0,0,1,0.8215,6268,30,2340,1362
28,1,0,0,0.3330,2541,2337,32,5090
28,0,1,0,0.9919,7512,69,2358,61
28,0,0,1,0.8190,6163,28,2447,1362
29,1,0,0,0.3422,2609,2354,22,5015
29,0,1,0,0.9930,7522,54,2371,53
29,0,0,1,0.8278,6256,35,2408,1301
30,1,0,0,0.3365,2549,2395,29,5027
30,0,1,0,0.9930,7568,61,2318,53
30,0,0,1,0.8188,6262,37,2315,1386
31,1,0,0,0.3354,2522,2445,36,4997
31,0,1,0,0.9930,7624,68,2254,54
31,0,0,1,0.8282,6267,30,2403,1300
32,1,0,0,0.3448,2601,2436,20,4943
32,0,1,0,0.9932,7569,62,2317,52
32,0,0,1,0.8264,6295,37,2346,1322
"""

data4 = """FOLD_WIDTH,USE_T,USE_SN,USE_FINAL,DetectionRate,TP,FP,TN,FN
2,1,0,0,0.1734,1308,1203,1255,6234
2,0,1,0,0.6369,4826,62,2361,2751
2,0,0,1,0.8250,6253,31,2390,1326
3,1,0,0,0.2872,2185,1973,420,5422
3,0,1,0,0.8803,6748,54,2280,918
3,0,0,1,0.8236,6289,33,2331,1347
4,1,0,0,0.3000,2276,2149,265,5310
4,0,1,0,0.9089,6896,63,2350,691
4,0,0,1,0.8209,6209,28,2408,1355
5,1,0,0,0.3033,2298,2194,230,5278
5,0,1,0,0.9271,7062,55,2328,555
5,0,0,1,0.8230,6254,27,2374,1345
6,1,0,0,0.3136,2374,2229,201,5196
6,0,1,0,0.9406,7144,58,2347,451
6,0,0,1,0.8242,6235,34,2401,1330
7,1,0,0,0.3151,2400,2222,161,5217
7,0,1,0,0.9467,7215,74,2305,406
7,0,0,1,0.8156,6139,32,2441,1388
8,1,0,0,0.3137,2392,2223,151,5234
8,0,1,0,0.9547,7190,79,2390,341
8,0,0,1,0.8251,6269,31,2371,1329
9,1,0,0,0.3260,2476,2275,129,5120
9,0,1,0,0.9644,7314,57,2359,270
9,0,0,1,0.8243,6279,32,2351,1338
10,1,0,0,0.3182,2394,2364,112,5130
10,0,1,0,0.9609,7300,51,2352,297
10,0,0,1,0.8234,6224,29,2412,1335
11,1,0,0,0.3328,2537,2270,106,5087
11,0,1,0,0.9664,7315,56,2375,254
11,0,0,1,0.8190,6263,35,2318,1384
12,1,0,0,0.3358,2544,2305,120,5031
12,0,1,0,0.9707,7375,57,2345,223
12,0,0,1,0.8257,6316,28,2323,1333
13,1,0,0,0.3291,2506,2279,106,5109
13,0,1,0,0.9736,7327,70,2404,199
13,0,0,1,0.8238,6315,29,2305,1351
14,1,0,0,0.3274,2464,2398,77,5061
14,0,1,0,0.9744,7378,65,2363,194
14,0,0,1,0.8177,6193,34,2392,1381
15,1,0,0,0.3327,2531,2306,87,5076
15,0,1,0,0.9757,7395,73,2348,184
15,0,0,1,0.8145,6207,20,2359,1414
16,1,0,0,0.3243,2443,2381,87,5089
16,0,1,0,0.9766,7435,59,2328,178
16,0,0,1,0.8296,6355,29,2311,1305
17,1,0,0,0.3316,2518,2337,69,5076
17,0,1,0,0.9787,7494,60,2283,163
17,0,0,1,0.8253,6310,32,2322,1336
18,1,0,0,0.3390,2614,2218,71,5097
18,0,1,0,0.9805,7405,61,2387,147
18,0,0,1,0.8223,6232,33,2388,1347
19,1,0,0,0.3223,2437,2364,74,5125
19,0,1,0,0.9830,7462,71,2338,129
19,0,0,1,0.8239,6289,19,2348,1344
20,1,0,0,0.3383,2573,2327,68,5032
20,0,1,0,0.9799,7469,53,2325,153
20,0,0,1,0.8255,6245,37,2398,1320
21,1,0,0,0.3359,2541,2377,59,5023
21,0,1,0,0.9817,7466,67,2328,139
21,0,0,1,0.8176,6223,38,2351,1388
22,1,0,0,0.3302,2526,2300,51,5123
22,0,1,0,0.9834,7514,62,2297,127
22,0,0,1,0.8194,6240,35,2350,1375
23,1,0,0,0.3302,2532,2287,44,5137
23,0,1,0,0.9835,7413,59,2404,124
23,0,0,1,0.8224,6181,24,2460,1335
24,1,0,0,0.3310,2501,2385,58,5056
24,0,1,0,0.9822,7414,66,2386,134
24,0,0,1,0.8231,6296,32,2319,1353
25,1,0,0,0.3455,2622,2358,53,4967
25,0,1,0,0.9849,7420,65,2401,114
25,0,0,1,0.8237,6194,40,2440,1326
26,1,0,0,0.3458,2626,2366,39,4969
26,0,1,0,0.9848,7514,70,2300,116
26,0,0,1,0.8211,6243,36,2361,1360
27,1,0,0,0.3337,2555,2302,42,5101
27,0,1,0,0.9864,7539,59,2298,104
27,0,0,1,0.8245,6278,40,2346,1336
28,1,0,0,0.3370,2578,2303,48,5071
28,0,1,0,0.9858,7518,67,2307,108
28,0,0,1,0.8084,6216,34,2277,1473
29,1,0,0,0.3472,2643,2332,55,4970
29,0,1,0,0.9881,7489,59,2362,90
29,0,0,1,0.8226,6246,35,2372,1347
30,1,0,0,0.3338,2522,2405,40,5033
30,0,1,0,0.9878,7528,72,2307,93
30,0,0,1,0.8255,6296,36,2337,1331
31,1,0,0,0.3329,2528,2370,35,5067
31,0,1,0,0.9882,7544,60,2306,90
31,0,0,1,0.8193,6256,26,2338,1380
32,1,0,0,0.3423,2577,2433,38,4952
32,0,1,0,0.9873,7471,80,2353,96
32,0,0,1,0.8259,6246,29,2408,1317
"""

datasets = {
    "MOF_0": data1,          # 你的第一段
    "MOF_1": data2,          # 标注为 MOF1
    "SBF_1_2": data3,        # 1ele_2flip
    "SBF_2_1": data4,        # 2ele_1flip
}

# 读取与计算
results = {}
for name, text in datasets.items():
    df = pd.read_csv(StringIO(text))
    df["ErrorRate"] = df["FN"] / (df["TP"] + df["FN"])
    results[name] = df

# 作图：2x2 子图，纵轴为 FN/(TP+FN)
fig, axes = plt.subplots(2, 2, figsize=(10, 8), sharey=False)

markers = {
    "USE_T": "o",       # 圆点
    "USE_SN": "s",      # 方块
    "USE_FINAL": "^",   # 三角
    "Product": "D"      # 菱形
}
for ax, (name, df) in zip(axes.flatten(), results.items()):
    curves = {}
    for flag, label in [(("USE_T", 1), "USE_T"),
                        (("USE_SN", 1), "USE_SN"),
                        (("USE_FINAL", 1), "USE_FINAL")]:
        sub = df[df[flag[0]] == flag[1]]
        ax.plot(sub["FOLD_WIDTH"], sub["ErrorRate"], label=label, marker=markers[label], ms=4)
        curves[label] = sub.set_index("FOLD_WIDTH")["ErrorRate"]

    # 对齐索引并计算乘积
    prod = pd.concat(curves.values(), axis=1).prod(axis=1)

    ax.plot(prod.index, prod.values, label="Product", linestyle="-", linewidth=2, color="black", marker=markers["Product"], ms=4)

    ax.set_ylabel("Error Rate {}".format(name))
    ax.set_xlabel("FOLD_WIDTH")
    # ax.set_ylabel("FN/(TP+FN)")
    ax.grid()
    ax.set_yscale('log')
    # ax.legend()


handles, labels = axes[0,0].get_legend_handles_labels()
custom_labels = ["Checksum $t\mu$", "Checksum $sq$", "Range Check", "ReliaFHE"]
fig.legend(handles, custom_labels, loc="lower center", ncol=4)

plt.tight_layout(rect=[0,0.05,1,1])  # 给底部图例留空间
plt.show()
